{"version":3,"sources":["js/helpers.js","components/DeclensionTable.js","js/declensions.js","components/Decliner.js","App.js","serviceWorker.js","index.js"],"names":["cleanUnderscoresToProper","rawString","words","replace","toProperCase","match","toUpperCase","DeclensionTable","props","declension","declensionName","cases","className","classes","Object","entries","map","index","key","value","use","singular","root","plural","definition","nominative","genitive","dative","accusative","ablative","vocative","declensions","first_declension","second_declension","neuter_second_declension","third_declension","neuter_third_declension","fourth_declension","neuter_fourth_declension","fifth_declension","Decliner","allDeclensions","declensionOptions","useState","currDeclension","setCurrDeclension","showDeclined","setShowDeclined","stem","setStem","findStem","genForm","genEnding","regexSingular","RegExp","regexPlural","test","inputs","val","target","newStem","undefined","value_callback","inputName","type","name","onChange","placeholder","title","decl","el","App","id","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.986b7e81.chunk.js","sourcesContent":["export const cleanUnderscoresToProper = (rawString) => {\n  let words = rawString.replace(/_/g, \" \"); // replace all underscores with spaces;\n  return toProperCase(words);\n};\n\nexport const toProperCase = (rawString) =>\n  rawString.replace(/^[a-z]|\\s\\w/g, (match) => match.toUpperCase()); // make every word uppercase\n","import React from \"react\";\nimport \"../styles/DeclensionTable.css\";\nimport { cleanUnderscoresToProper } from \"../js/helpers\";\n\nconst DeclensionTable = (props) => {\n  const { declension, declensionName, cases } = props;\n\n  return (\n    <table\n      className={`declension-table ${declensionName} ${props.classes || \"\"}`}\n    >\n      <caption className={`${declensionName}-caption declension-table-title`}>\n        {cleanUnderscoresToProper(declensionName)}\n      </caption>\n      <colgroup>\n        <col className=\"case-column\" />\n        <col className=\"singular-column\" />\n        <col className=\"plural-column\" />\n      </colgroup>\n      <thead>\n        <tr className=\"header\">\n          <th className=\"case\">Cases</th>\n          <th className=\"singular\">Singular</th>\n          <th className=\"plural\">Plural</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(declension).map(([key, value], index) => (\n          <tr className={key} key={index}>\n            <th className={`case ${key}`}>\n              {key}\n              <span className=\"use-cases\">{cases[key].use}</span>\n            </th>\n            <td className={`declination singular ${value.singular}`}>\n              <span className=\"root-word\">{props.root && props.root}</span>\n              {value.singular}\n            </td>\n            <td className={`declination plural ${value.plural}`}>\n              <span className=\"root-word\">{props.root && props.root}</span>\n              {value.plural}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nexport default DeclensionTable;\n","/* aeiou */\nexport default {\n  definition:\n    \"The variation of a noun, pronoun, adjective or article to indicate grammatical case, number and gender.\",\n  cases: {\n    nominative: {\n      definition:\n        \"Case for the noun or pronoun when it is the subject of a sentence/clause. It is when it is the subject of a verb or doing the action of the verb. Derived from nomen (name).\",\n      use: `the (subject)`,\n    },\n    genitive: {\n      definition: \"\",\n      use: `of the`,\n    },\n    dative: {\n      definition: \"\",\n      use: `to/for the`,\n    },\n    accusative: {\n      definition: \"\",\n      use: `the (object)`,\n    },\n    ablative: {\n      definition: \"\",\n      use: `by/with/from/in/on the`,\n    },\n    vocative: {\n      definition: \"\",\n      use: `address`,\n    },\n  },\n  declensions: {\n    first_declension: {\n      nominative: {\n        singular: \"a\",\n        plural: \"ae\",\n      },\n      genitive: {\n        singular: \"ae\",\n        plural: \"arum\",\n      },\n      dative: {\n        singular: \"ae\",\n        plural: \"is\",\n      },\n      accusative: {\n        singular: \"am\",\n        plural: \"as\",\n      },\n      ablative: {\n        singular: \"a\",\n        plural: \"is\",\n      },\n      vocative: {\n        singular: \"a\",\n        plural: \"ae\",\n      },\n    },\n    second_declension: {\n      nominative: {\n        singular: \"us\",\n        plural: \"i\",\n      },\n      genitive: {\n        singular: \"i\",\n        plural: \"orum\",\n      },\n      dative: {\n        singular: \"o\",\n        plural: \"is\",\n      },\n      accusative: {\n        singular: \"um\",\n        plural: \"os\",\n      },\n      ablative: {\n        singular: \"o\",\n        plural: \"is\",\n      },\n      /* Fix this in declining */\n      vocative: {\n        singular: \"us -> e | Name end ius -> i\",\n        plural: \"i\",\n      },\n    },\n    neuter_second_declension: {\n      nominative: {\n        singular: \"um\",\n        plural: \"a\",\n      },\n      genitive: {\n        singular: \"i\",\n        plural: \"orum\",\n      },\n      dative: {\n        singular: \"o\",\n        plural: \"is\",\n      },\n      accusative: {\n        singular: \"um\",\n        plural: \"a\",\n      },\n      ablative: {\n        singular: \"o\",\n        plural: \"is\",\n      },\n      /* Fix this in declining */\n      vocative: {\n        singular: \"us -> e | Name end ius -> i\",\n        plural: \"a\",\n      },\n    },\n    third_declension: {\n      nominative: {\n        singular: \"-\",\n        plural: \"es\",\n      },\n      genitive: {\n        singular: \"is\",\n        plural: \"um\",\n      },\n      dative: {\n        singular: \"i\",\n        plural: \"ibus\",\n      },\n      accusative: {\n        singular: \"em\",\n        plural: \"es\",\n      },\n      ablative: {\n        singular: \"e\",\n        plural: \"ibus\",\n      },\n      vocative: {\n        singular: \"-\",\n        plural: \"es\",\n      },\n    },\n    neuter_third_declension: {\n      nominative: {\n        singular: \"-\",\n        plural: \"a\",\n      },\n      genitive: {\n        singular: \"is\",\n        plural: \"um\",\n      },\n      dative: {\n        singular: \"i\",\n        plural: \"ibus\",\n      },\n      accusative: {\n        singular: \"-\",\n        plural: \"a\",\n      },\n      ablative: {\n        singular: \"e\",\n        plural: \"ibus\",\n      },\n      vocative: {\n        singular: \"-\",\n        plural: \"a\",\n      },\n    },\n    fourth_declension: {\n      nominative: {\n        singular: \"us\",\n        plural: \"us\",\n      },\n      genitive: {\n        singular: \"us\",\n        plural: \"uum\",\n      },\n      dative: {\n        singular: \"ui\",\n        plural: \"ibus\",\n      },\n      accusative: {\n        singular: \"um\",\n        plural: \"us\",\n      },\n      ablative: {\n        singular: \"u\",\n        plural: \"ibus\",\n      },\n      vocative: {\n        singular: \"us\",\n        plural: \"us\",\n      },\n    },\n    neuter_fourth_declension: {\n      nominative: {\n        singular: \"u\",\n        plural: \"ua\",\n      },\n      genitive: {\n        singular: \"us\",\n        plural: \"uum\",\n      },\n      dative: {\n        singular: \"u\",\n        plural: \"ibus\",\n      },\n      accusative: {\n        singular: \"u\",\n        plural: \"ua\",\n      },\n      ablative: {\n        singular: \"u\",\n        plural: \"ibus\",\n      },\n      vocative: {\n        singular: \"u\",\n        plural: \"ua\",\n      },\n    },\n    fifth_declension: {\n      nominative: {\n        singular: \"es\",\n        plural: \"es\",\n      },\n      genitive: {\n        singular: \"ei\",\n        plural: \"erum\",\n      },\n      dative: {\n        singular: \"ei\",\n        plural: \"ebum\",\n      },\n      accusative: {\n        singular: \"em\",\n        plural: \"es\",\n      },\n      ablative: {\n        singular: \"e\",\n        plural: \"ebus\",\n      },\n      vocative: {\n        singular: \"es\",\n        plural: \"es\",\n      },\n    },\n  },\n};\n","import React, { useState } from \"react\";\nimport \"../styles/Decliner.css\";\nimport DeclensionTable from \"./DeclensionTable\";\nimport declensions from \"../js/declensions\";\nimport { cleanUnderscoresToProper, toProperCase } from \"../js/helpers\";\n\nexport const Decliner = () => {\n  const allDeclensions = declensions.declensions;\n  const declensionOptions = Object.entries(allDeclensions).map(([key]) => key);\n\n  const [currDeclension, setCurrDeclension] = useState(declensionOptions[0]);\n  const [showDeclined, setShowDeclined] = useState(false);\n  const [stem, setStem] = useState(\"\");\n\n  const handleStemChange = ({ target }) => {\n    const val = target.value;\n    if (val !== \"\") {\n      showDeclined !== true && setShowDeclined(true);\n      setStem(val);\n    }\n  };\n\n  const handleDeclChange = ({ target }) => {\n    const decl = target.value;\n    setCurrDeclension(decl);\n  };\n\n  const buildDeclinedTables = (root, declension) => (\n    <DeclensionTable\n      declension={allDeclensions[declension]}\n      declensionName={declension}\n      cases={declensions.cases}\n      root={root}\n      classes=\"decliner\"\n    ></DeclensionTable>\n  );\n\n  const handleGenChange = ({ target }) => {\n    const val = target.value;\n    if (val !== \"\") {\n      const newStem = findStem(val);\n      if (newStem !== undefined) {\n        setStem(newStem);\n        showDeclined !== true && setShowDeclined(true);\n      } else {\n        setStem(\"\");\n      }\n    }\n  };\n\n  /* Given a latin word in genitive form, find the stem */\n  const findStem = (genForm) => {\n    const genEnding = allDeclensions[currDeclension].genitive;\n    const regexSingular = new RegExp(`${genEnding.singular}$`, \"i\");\n    const regexPlural = new RegExp(`${genEnding.plural}$`, \"i\");\n\n    if (regexSingular.test(genForm)) {\n      return genForm.replace(regexSingular, \"\");\n    } else if (regexPlural.test(genForm)) {\n      return genForm.replace(regexPlural, \"\");\n    }\n    /* Future add support for both special and non-special char */\n  };\n\n  const inputs = {\n    genitive: handleGenChange,\n    stem: handleStemChange,\n  };\n\n  return (\n    <div className=\"decliner\">\n      <form className=\"decliner-form\">\n        {Object.entries(inputs).map(([key, value_callback], index) => {\n          const inputName = `${key === \"stem\" ? \"Latin \" : \"\"}${toProperCase(\n            key\n          )}${key !== \"stem\" ? \" Case\" : \"\"}`;\n\n          return (\n            <input\n              key={index}\n              type=\"text\"\n              name={`${key}_word`}\n              className={`decliner-${key}-word decliner-field`}\n              onChange={value_callback}\n              placeholder={inputName}\n              title={inputName}\n            />\n          );\n        })}\n\n        <p>or</p>\n\n        <select\n          name=\"declension_select\"\n          className=\"decliner-declension-select decliner-field\"\n          onChange={handleDeclChange}\n        >\n          {declensionOptions.map((el, index) => (\n            <option value={el} key={index}>\n              {cleanUnderscoresToProper(el)}\n            </option>\n          ))}\n        </select>\n      </form>\n      {showDeclined && buildDeclinedTables(stem, currDeclension)}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport DeclensionTable from \"./components/DeclensionTable\";\nimport { Decliner } from \"./components/Decliner\";\nimport declensions from \"../src/js/declensions\";\n\nconst App = () => {\n  const allDeclensions = declensions.declensions;\n  const cases = declensions.cases;\n\n  return (\n    <div id=\"home\">\n      <h1 className=\"heading\">Latin</h1>\n      <section id=\"declensions\">\n        <header>\n          <h2 className=\"heading\">Declensions</h2>\n          <p>\n            The variation of a{\" \"}\n            <span className=\"keyword\">\n              noun\n              <span className=\"info\">\n                A person, place or thing.\n                <span className=\"example\">\n                  Aislin, Gemma, New York, cat, audience\n                </span>\n              </span>\n            </span>\n            ,{\" \"}\n            <span className=\"keyword\">\n              pronoun\n              <span className=\"info\">\n                A word that is used instead of a noun or noun phrase\n                <span className=\"example\">\n                  I, me, he, she, herself, you, it, that, they, each, few, many,\n                  who, whoever, whose, someone, everybody and etc.\n                </span>\n              </span>\n            </span>\n            ,{\" \"}\n            <span className=\"keyword\">\n              adjective\n              <span className=\"info\">\n                A word or phrase that describes a noun\n                <span className=\"example\">\n                  The <em>red</em> balloon. The <em>melodic</em> sounds. The\n                  grass is <em>green</em> here.\n                </span>\n              </span>\n            </span>{\" \"}\n            or{\" \"}\n            <span className=\"keyword\">\n              article\n              <span className=\"info\">\n                Special modifiers that appear before nouns or noun phrases that\n                help clarify the meaning of them.\n                <span className=\"example\">the, a/an</span>\n              </span>\n            </span>{\" \"}\n            to indicate grammatical case, number and gender.\n          </p>\n        </header>\n        <Decliner></Decliner>\n        {Object.entries(allDeclensions).map(([key, value], index) => (\n          <DeclensionTable\n            declension={value}\n            declensionName={key}\n            key={index}\n            cases={cases}\n          ></DeclensionTable>\n        ))}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}