{"version":3,"sources":["components/DeclensionTable.js","js/declensions.js","App.js","serviceWorker.js","index.js"],"names":["DeclensionTable","props","declension","declensionName","className","replace","match","toUpperCase","Object","entries","map","index","key","value","singular","plural","first_declension","nominative","genitive","dative","accusative","ablative","vocative","second_declension","neuter_second_declension","third_declension","neuter_third_declension","fourth_declension","neuter_fourth_declension","fifth_declension","App","allDeclensions","declensions","id","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12eff5dd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/DeclensionTable.css\";\n\nconst DeclensionTable = (props) => {\n  const { declension, declensionName } = props;\n\n  return (\n    <table className={`declension-table ${declensionName}`}>\n      <caption className={`${declensionName}-caption declension-table-title`}>\n        {\n          declensionName\n            .replace(/_/g, \" \") // replace all underscores with spaces\n            .replace(/^[a-z]|\\s\\w/g, (match) => match.toUpperCase()) //make every word uppercase\n        }\n      </caption>\n      <colgroup>\n        <col className=\"case-column\" />\n        <col className=\"singular-column\" />\n        <col className=\"plural-column\" />\n      </colgroup>\n      <thead>\n        <tr className=\"header\">\n          <th className=\"case\">Cases</th>\n          <th className=\"singular\">Singular</th>\n          <th className=\"plural\">Plural</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(declension).map(([key, value], index) => (\n          <tr className={key} key={index}>\n            <th className={`case ${key}`}>{key}</th>\n            <td className={`singular ${value.singular}`}>{value.singular}</td>\n            <td className={`plural ${value.plural}`}>{value.plural}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nexport default DeclensionTable;\n","/* āēīōū */\nexport default {\n  definition:\n    \"The variation of a noun, pronoun, adjective or article to indicate grammatical case, number and gender.\",\n  declensions: {\n    first_declension: {\n      nominative: {\n        singular: \"a\",\n        plural: \"ae\",\n      },\n      genitive: {\n        singular: \"ae\",\n        plural: \"ārum\",\n      },\n      dative: {\n        singular: \"ae\",\n        plural: \"īs\",\n      },\n      accusative: {\n        singular: \"am\",\n        plural: \"ās\",\n      },\n      ablative: {\n        singular: \"ā\",\n        plural: \"īs\",\n      },\n      vocative: {\n        singular: \"a\",\n        plural: \"ae\",\n      },\n    },\n    second_declension: {\n      nominative: {\n        singular: \"us\",\n        plural: \"ī\",\n      },\n      genitive: {\n        singular: \"ī\",\n        plural: \"ōrum\",\n      },\n      dative: {\n        singular: \"ō\",\n        plural: \"īs\",\n      },\n      accusative: {\n        singular: \"um\",\n        plural: \"ōs\",\n      },\n      ablative: {\n        singular: \"ō\",\n        plural: \"īs\",\n      },\n      vocative: {\n        singular: \"us -> e | Name end ius -> ī\",\n        plural: \"ī\",\n      },\n    },\n    neuter_second_declension: {\n      nominative: {\n        singular: \"um\",\n        plural: \"a\",\n      },\n      genitive: {\n        singular: \"ī\",\n        plural: \"ōrum\",\n      },\n      dative: {\n        singular: \"ō\",\n        plural: \"īs\",\n      },\n      accusative: {\n        singular: \"um\",\n        plural: \"a\",\n      },\n      ablative: {\n        singular: \"ō\",\n        plural: \"īs\",\n      },\n      vocative: {\n        singular: \"us -> e | Name end ius -> ī\",\n        plural: \"a\",\n      },\n    },\n    third_declension: {\n      nominative: {\n        singular: \"-\",\n        plural: \"ēs\",\n      },\n      genitive: {\n        singular: \"is\",\n        plural: \"um\",\n      },\n      dative: {\n        singular: \"ī\",\n        plural: \"ibus\",\n      },\n      accusative: {\n        singular: \"em\",\n        plural: \"ēs\",\n      },\n      ablative: {\n        singular: \"e\",\n        plural: \"ibus\",\n      },\n      vocative: {\n        singular: \"-\",\n        plural: \"ēs\",\n      },\n    },\n    neuter_third_declension: {\n      nominative: {\n        singular: \"-\",\n        plural: \"a\",\n      },\n      genitive: {\n        singular: \"is\",\n        plural: \"um\",\n      },\n      dative: {\n        singular: \"ī\",\n        plural: \"ibus\",\n      },\n      accusative: {\n        singular: \"-\",\n        plural: \"a\",\n      },\n      ablative: {\n        singular: \"e\",\n        plural: \"ibus\",\n      },\n      vocative: {\n        singular: \"-\",\n        plural: \"a\",\n      },\n    },\n    fourth_declension: {\n      nominative: {\n        singular: \"us\",\n        plural: \"ūs\",\n      },\n      genitive: {\n        singular: \"ūs\",\n        plural: \"uum\",\n      },\n      dative: {\n        singular: \"uī\",\n        plural: \"ibus\",\n      },\n      accusative: {\n        singular: \"um\",\n        plural: \"ūs\",\n      },\n      ablative: {\n        singular: \"ū\",\n        plural: \"ibus\",\n      },\n      vocative: {\n        singular: \"us\",\n        plural: \"ūs\",\n      },\n    },\n    neuter_fourth_declension: {\n      nominative: {\n        singular: \"ū\",\n        plural: \"ua\",\n      },\n      genitive: {\n        singular: \"ūs\",\n        plural: \"uum\",\n      },\n      dative: {\n        singular: \"u\",\n        plural: \"ibus\",\n      },\n      accusative: {\n        singular: \"ū\",\n        plural: \"ua\",\n      },\n      ablative: {\n        singular: \"ū\",\n        plural: \"ibus\",\n      },\n      vocative: {\n        singular: \"ū\",\n        plural: \"ua\",\n      },\n    },\n    fifth_declension: {\n      nominative: {\n        singular: \"ēs\",\n        plural: \"ēs\",\n      },\n      genitive: {\n        singular: \"eī\",\n        plural: \"ērum\",\n      },\n      dative: {\n        singular: \"eī\",\n        plural: \"ēbum\",\n      },\n      accusative: {\n        singular: \"em\",\n        plural: \"ēs\",\n      },\n      ablative: {\n        singular: \"ē\",\n        plural: \"ēbus\",\n      },\n      vocative: {\n        singular: \"ēs\",\n        plural: \"ēs\",\n      },\n    },\n  },\n};\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport DeclensionTable from \"./components/DeclensionTable\";\nimport declensions from \"../src/js/declensions\";\n\nconst App = () => {\n  const allDeclensions = declensions.declensions;\n  return (\n    <div id=\"home\">\n      <h1 className=\"heading\">Latin</h1>\n      <section id=\"declensions\">\n        <header>\n          <h2 className=\"heading\">Declensions</h2>\n          <p>\n            The variation of a{\" \"}\n            <span className=\"keyword\">\n              noun\n              <span className=\"info\">\n                A person, place or thing.\n                <span className=\"example\">\n                  Aislin, Gemma, New York, cat, audience\n                </span>\n              </span>\n            </span>\n            ,{\" \"}\n            <span className=\"keyword\">\n              pronoun\n              <span className=\"info\">\n                A word that is used instead of a noun or noun phrase\n                <span className=\"example\">\n                  I, me, he, she, herself, you, it, that, they, each, few, many,\n                  who, whoever, whose, someone, everybody\n                </span>\n              </span>\n            </span>\n            ,{\" \"}\n            <span className=\"keyword\">\n              adjective\n              <span className=\"info\">\n                A word or phrase that describes a noun\n                <span className=\"example\">\n                  The <em>red</em> balloon. The <em>melodic</em> sounds. The\n                  grass is <em>green</em> here.\n                </span>\n              </span>\n            </span>{\" \"}\n            or{\" \"}\n            <span className=\"keyword\">\n              article\n              <span className=\"info\">\n                Special modifiers that appear before nouns or noun phrases that\n                help clarify the meaning of them.\n                <span className=\"example\">the, a/an</span>\n              </span>\n            </span>{\" \"}\n            to indicate grammatical case, number and gender.\n          </p>\n        </header>\n        {Object.entries(allDeclensions).map(([key, value], index) => (\n          <DeclensionTable\n            declension={value}\n            declensionName={key}\n            key={index}\n          ></DeclensionTable>\n        ))}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}