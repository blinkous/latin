{"version":3,"sources":["js/helpers.js","components/DeclensionTable.js","js/declensions.js","components/DeclinerInput.js","components/Decliner.js","components/App.js","index.js"],"names":["cleanUnderscoresToProper","nString","words","replace","toProperCase","match","toUpperCase","DeclensionTable","props","declension","declensionName","cases","root","nominative","tentativeRoot","isName","className","classes","Object","entries","map","index","key","value","use","singular","singular_name","plural","declension_info","definition","genitive","dative","accusative","ablative","vocative","declensions","first_declension","second_declension","neuter_second_declension","third_declension","neuter_third_declension","fourth_declension","neuter_fourth_declension","fifth_declension","DeclinerInput","name","onChange","useState","isEmpty","setIsEmpty","cleanName","htmlFor","type","onKeyDown","e","test","preventDefault","onPaste","pastedText","clipboardData","getData","cleanedText","isSpecialG","RegExp","cleanSpecialChars","length","target","placeholder","title","Decliner","declensionOptions","currDeclension","setCurrDeclension","showDeclined","setShowDeclined","stem","setStem","stemInput","setStemInput","setNominative","setGenitive","setStemFromGen","genCase","newStem","findStem","undefined","genForm","genEnding","regexSingular","regexPlural","val","el","App","setIsName","didScroll","setDidScroll","id","onClick","onScroll","xmlns","viewBox","stroke-width","x1","y1","x2","y2","points","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.867b5025.chunk.js","sourcesContent":["export const cleanUnderscoresToProper = (nString) => {\n  let words = nString.replace(/_/g, \" \"); // replace all underscores with spaces;\n  return toProperCase(words);\n};\n\nexport const toProperCase = (nString) =>\n  nString.replace(/^[a-z]|\\s\\w/g, (match) => match.toUpperCase()); // make every word uppercase\n\nexport const getSpecialCharsRegex = () =>\n  /[.`~!@#$%^&*()\\-_=+[{}\\]|\\\\;:\"'<>,?/\\d\\s]/;\n\nexport const checkForSpecialChars = (nString) =>\n  getSpecialCharsRegex().test(nString);\n\nexport const cleanSpecialChars = (nString) => {\n  const isSpecialG = new RegExp(getSpecialCharsRegex(), \"g\");\n  return nString.replace(isSpecialG, \"\");\n};\n","import React from \"react\";\nimport \"../styles/DeclensionTable.css\";\nimport { cleanUnderscoresToProper } from \"../js/helpers\";\n\nconst DeclensionTable = (props) => {\n  const {\n    declension,\n    declensionName,\n    cases,\n    root,\n    nominative,\n    tentativeRoot,\n    isName,\n  } = props;\n\n  return (\n    <table\n      className={`declension-table ${declensionName} ${props.classes || \"\"}${\n        tentativeRoot && !root ? \" tentative\" : \"\"\n      }`}\n    >\n      <caption className={`${declensionName}-caption declension-table-title`}>\n        {cleanUnderscoresToProper(declensionName)}\n      </caption>\n      <colgroup>\n        <col className=\"case-column\" />\n        <col className=\"singular-column\" />\n        <col className=\"plural-column\" />\n      </colgroup>\n      <thead>\n        <tr className=\"header\">\n          <th className=\"case\">Cases</th>\n          <th className=\"singular\">Singular</th>\n          <th className=\"plural\">Plural</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(declension).map(([key, value], index) => (\n          <tr className={key} key={index}>\n            <th className={`case ${key}`}>\n              {key}\n              <span className=\"use-cases\">{cases[key].use}</span>\n            </th>\n            <td className={`declination singular ${value.singular}`}>\n              {/* Only display the root span if there is a root or tentativeRoot or a nominative form and this is the nominative form */}\n              {root || tentativeRoot || (nominative && key === \"nominative\") ? (\n                <span className={`root-word`}>\n                  {nominative && key === \"nominative\"\n                    ? nominative\n                    : root || tentativeRoot}\n                </span>\n              ) : null}\n              {nominative && key === \"nominative\"\n                ? \"\"\n                : props.isName && key === \"vocative\" && value.singular_name\n                ? value.singular_name\n                : value.singular}\n            </td>\n            <td className={`declination plural ${value.plural}`}>\n              {root || tentativeRoot ? (\n                <span className=\"root-word\">{root || tentativeRoot}</span>\n              ) : null}\n              {value.plural}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nexport default DeclensionTable;\n","export const declension_info = {\n  definition:\n    \"The variation of a noun, pronoun, adjective or article to indicate grammatical case, number and gender.\",\n  cases: {\n    nominative: {\n      definition:\n        \"Case for the noun or pronoun when it is the subject of a sentence/clause. It is when it is the subject of a verb or doing the action of the verb. Derived from nomen (name).\",\n      use: `the (subject)`,\n    },\n    genitive: {\n      definition: \"\",\n      use: `of the`,\n    },\n    dative: {\n      definition: \"\",\n      use: `to/for the`,\n    },\n    accusative: {\n      definition: \"\",\n      use: `the (object)`,\n    },\n    ablative: {\n      definition: \"\",\n      use: `by/with/from/in/on the`,\n    },\n    vocative: {\n      definition: \"\",\n      use: `address`,\n    },\n  },\n};\n\nexport const declensions = {\n  first_declension: {\n    nominative: {\n      singular: \"a\",\n      plural: \"ae\",\n    },\n    genitive: {\n      singular: \"ae\",\n      plural: \"arum\",\n    },\n    dative: {\n      singular: \"ae\",\n      plural: \"is\",\n    },\n    accusative: {\n      singular: \"am\",\n      plural: \"as\",\n    },\n    ablative: {\n      singular: \"a\",\n      plural: \"is\",\n    },\n    vocative: {\n      singular: \"a\",\n      plural: \"ae\",\n    },\n  },\n  second_declension: {\n    nominative: {\n      singular: \"us\",\n      plural: \"i\",\n    },\n    genitive: {\n      singular: \"i\",\n      plural: \"orum\",\n    },\n    dative: {\n      singular: \"o\",\n      plural: \"is\",\n    },\n    accusative: {\n      singular: \"um\",\n      plural: \"os\",\n    },\n    ablative: {\n      singular: \"o\",\n      plural: \"is\",\n    },\n    vocative: {\n      singular: \"e\",\n      plural: \"i\",\n      singular_name: \"i\",\n    },\n  },\n  neuter_second_declension: {\n    nominative: {\n      singular: \"um\",\n      plural: \"a\",\n    },\n    genitive: {\n      singular: \"i\",\n      plural: \"orum\",\n    },\n    dative: {\n      singular: \"o\",\n      plural: \"is\",\n    },\n    accusative: {\n      singular: \"um\",\n      plural: \"a\",\n    },\n    ablative: {\n      singular: \"o\",\n      plural: \"is\",\n    },\n    vocative: {\n      singular: \"e\",\n      plural: \"a\",\n      singular_name: \"i\",\n    },\n  },\n  third_declension: {\n    nominative: {\n      singular: \"-\",\n      plural: \"es\",\n    },\n    genitive: {\n      singular: \"is\",\n      plural: \"um\",\n    },\n    dative: {\n      singular: \"i\",\n      plural: \"ibus\",\n    },\n    accusative: {\n      singular: \"em\",\n      plural: \"es\",\n    },\n    ablative: {\n      singular: \"e\",\n      plural: \"ibus\",\n    },\n    vocative: {\n      singular: \"-\",\n      plural: \"es\",\n    },\n  },\n  neuter_third_declension: {\n    nominative: {\n      singular: \"-\",\n      plural: \"a\",\n    },\n    genitive: {\n      singular: \"is\",\n      plural: \"um\",\n    },\n    dative: {\n      singular: \"i\",\n      plural: \"ibus\",\n    },\n    accusative: {\n      singular: \"-\",\n      plural: \"a\",\n    },\n    ablative: {\n      singular: \"e\",\n      plural: \"ibus\",\n    },\n    vocative: {\n      singular: \"-\",\n      plural: \"a\",\n    },\n  },\n  fourth_declension: {\n    nominative: {\n      singular: \"us\",\n      plural: \"us\",\n    },\n    genitive: {\n      singular: \"us\",\n      plural: \"uum\",\n    },\n    dative: {\n      singular: \"ui\",\n      plural: \"ibus\",\n    },\n    accusative: {\n      singular: \"um\",\n      plural: \"us\",\n    },\n    ablative: {\n      singular: \"u\",\n      plural: \"ibus\",\n    },\n    vocative: {\n      singular: \"us\",\n      plural: \"us\",\n    },\n  },\n  neuter_fourth_declension: {\n    nominative: {\n      singular: \"u\",\n      plural: \"ua\",\n    },\n    genitive: {\n      singular: \"us\",\n      plural: \"uum\",\n    },\n    dative: {\n      singular: \"u\",\n      plural: \"ibus\",\n    },\n    accusative: {\n      singular: \"u\",\n      plural: \"ua\",\n    },\n    ablative: {\n      singular: \"u\",\n      plural: \"ibus\",\n    },\n    vocative: {\n      singular: \"u\",\n      plural: \"ua\",\n    },\n  },\n  fifth_declension: {\n    nominative: {\n      singular: \"es\",\n      plural: \"es\",\n    },\n    genitive: {\n      singular: \"ei\",\n      plural: \"erum\",\n    },\n    dative: {\n      singular: \"ei\",\n      plural: \"ebum\",\n    },\n    accusative: {\n      singular: \"em\",\n      plural: \"es\",\n    },\n    ablative: {\n      singular: \"e\",\n      plural: \"ebus\",\n    },\n    vocative: {\n      singular: \"es\",\n      plural: \"es\",\n    },\n  },\n};\n\nexport const declensions_special = {\n  first_declension: {\n    nominative: {\n      singular: \"a\",\n      plural: \"ae\",\n    },\n    genitive: {\n      singular: \"ae\",\n      plural: \"ārum\",\n    },\n    dative: {\n      singular: \"ae\",\n      plural: \"īs\",\n    },\n    accusative: {\n      singular: \"am\",\n      plural: \"ās\",\n    },\n    ablative: {\n      singular: \"ā\",\n      plural: \"īs\",\n    },\n    vocative: {\n      singular: \"a\",\n      plural: \"ae\",\n    },\n  },\n  second_declension: {\n    nominative: {\n      singular: \"us\",\n      plural: \"ī\",\n    },\n    genitive: {\n      singular: \"ī\",\n      plural: \"ōrum\",\n    },\n    dative: {\n      singular: \"ō\",\n      plural: \"īs\",\n    },\n    accusative: {\n      singular: \"um\",\n      plural: \"ōs\",\n    },\n    ablative: {\n      singular: \"ō\",\n      plural: \"īs\",\n    },\n    vocative: {\n      singular: \"e\",\n      plural: \"ī\",\n      singular_name: \"ī\",\n    },\n  },\n  neuter_second_declension: {\n    nominative: {\n      singular: \"um\",\n      plural: \"a\",\n    },\n    genitive: {\n      singular: \"ī\",\n      plural: \"ōrum\",\n    },\n    dative: {\n      singular: \"ō\",\n      plural: \"īs\",\n    },\n    accusative: {\n      singular: \"um\",\n      plural: \"a\",\n    },\n    ablative: {\n      singular: \"ō\",\n      plural: \"īs\",\n    },\n    vocative: {\n      singular: \"e\",\n      plural: \"a\",\n      singular_name: \"ī\",\n    },\n  },\n  third_declension: {\n    nominative: {\n      singular: \"-\",\n      plural: \"ēs\",\n    },\n    genitive: {\n      singular: \"is\",\n      plural: \"um\",\n    },\n    dative: {\n      singular: \"ī\",\n      plural: \"ibus\",\n    },\n    accusative: {\n      singular: \"em\",\n      plural: \"ēs\",\n    },\n    ablative: {\n      singular: \"e\",\n      plural: \"ibus\",\n    },\n    vocative: {\n      singular: \"-\",\n      plural: \"ēs\",\n    },\n  },\n  neuter_third_declension: {\n    nominative: {\n      singular: \"-\",\n      plural: \"a\",\n    },\n    genitive: {\n      singular: \"is\",\n      plural: \"um\",\n    },\n    dative: {\n      singular: \"ī\",\n      plural: \"ibus\",\n    },\n    accusative: {\n      singular: \"-\",\n      plural: \"a\",\n    },\n    ablative: {\n      singular: \"e\",\n      plural: \"ibus\",\n    },\n    vocative: {\n      singular: \"-\",\n      plural: \"a\",\n    },\n  },\n  fourth_declension: {\n    nominative: {\n      singular: \"us\",\n      plural: \"ūs\",\n    },\n    genitive: {\n      singular: \"ūs\",\n      plural: \"uum\",\n    },\n    dative: {\n      singular: \"uī\",\n      plural: \"ibus\",\n    },\n    accusative: {\n      singular: \"um\",\n      plural: \"ūs\",\n    },\n    ablative: {\n      singular: \"ū\",\n      plural: \"ibus\",\n    },\n    vocative: {\n      singular: \"us\",\n      plural: \"ūs\",\n    },\n  },\n  neuter_fourth_declension: {\n    nominative: {\n      singular: \"ū\",\n      plural: \"ua\",\n    },\n    genitive: {\n      singular: \"ūs\",\n      plural: \"uum\",\n    },\n    dative: {\n      singular: \"u\",\n      plural: \"ibus\",\n    },\n    accusative: {\n      singular: \"ū\",\n      plural: \"ua\",\n    },\n    ablative: {\n      singular: \"ū\",\n      plural: \"ibus\",\n    },\n    vocative: {\n      singular: \"ū\",\n      plural: \"ua\",\n    },\n  },\n  fifth_declension: {\n    nominative: {\n      singular: \"ēs\",\n      plural: \"ēs\",\n    },\n    genitive: {\n      singular: \"eī\",\n      plural: \"ērum\",\n    },\n    dative: {\n      singular: \"eī\",\n      plural: \"ēbum\",\n    },\n    accusative: {\n      singular: \"em\",\n      plural: \"ēs\",\n    },\n    ablative: {\n      singular: \"ē\",\n      plural: \"ēbus\",\n    },\n    vocative: {\n      singular: \"ēs\",\n      plural: \"ēs\",\n    },\n  },\n};\n","import React, { useState } from \"react\";\nimport {\n  toProperCase,\n  checkForSpecialChars,\n  cleanSpecialChars,\n} from \"../js/helpers\";\n\nconst DeclinerInput = ({ name, onChange }) => {\n  const [isEmpty, setIsEmpty] = useState(true);\n  const cleanName = `${name === \"stem\" ? \"Latin \" : \"\"}${toProperCase(name)}${\n    name !== \"stem\" ? \" Case\" : \"\"\n  }`;\n\n  const handleKeyDown = (e) => {\n    checkForSpecialChars(e.key) && e.preventDefault();\n  };\n\n  const handleChange = (e) => {\n    if (e.target.value !== \"\") {\n      setIsEmpty(false);\n    } else {\n      setIsEmpty(true);\n    }\n    onChange(e);\n  };\n\n  const handlePaste = (e) => {\n    const pastedText = e.clipboardData.getData(\"text\");\n    const cleanedText = cleanSpecialChars(pastedText);\n    if (pastedText.length !== cleanedText) {\n      e.preventDefault();\n      e.target.value = cleanedText;\n    }\n  };\n\n  return (\n    <>\n      <label\n        htmlFor={`${name}_word`}\n        className={`${name}-word label ${isEmpty ? \"hide\" : \"\"}`}\n      >\n        {cleanName}\n      </label>\n      <input\n        type=\"text\"\n        name={`${name}_word`}\n        className={`${name}-word decliner-${name}-word decliner-field`}\n        onKeyDown={handleKeyDown}\n        onPaste={handlePaste}\n        onChange={handleChange}\n        placeholder={cleanName}\n        title={cleanName}\n      />\n    </>\n  );\n};\n\nexport default DeclinerInput;\n","import React, { useState } from \"react\";\nimport \"../styles/Decliner.css\";\nimport { declensions, declension_info } from \"../js/declensions\";\nimport { cleanUnderscoresToProper } from \"../js/helpers\";\nimport DeclinerInput from \"./DeclinerInput\";\nimport DeclensionTable from \"./DeclensionTable\";\n\nexport const Decliner = (props) => {\n  const declensionOptions = Object.entries(declensions).map(([key]) => key);\n\n  const [currDeclension, setCurrDeclension] = useState(declensionOptions[0]);\n  const [showDeclined, setShowDeclined] = useState(false);\n  const [stem, setStem] = useState(\"\");\n  const [stemInput, setStemInput] = useState(\"\");\n  const [nominative, setNominative] = useState(\"\");\n  const [genitive, setGenitive] = useState(\"\");\n\n  const handleDeclChange = (e) => {\n    setCurrDeclension(e.target.value);\n    stemInput === \"\" && setStemFromGen(genitive);\n  };\n\n  const handleStemChange = (e) => {\n    const val = e.target.value;\n    showDeclined !== true && setShowDeclined(true);\n    setStem(val);\n    setStemInput(val);\n    val === \"\" && genitive !== \"\" && setStemFromGen(genitive);\n  };\n\n  const handleNomChange = (e) => {\n    setNominative(e.target.value);\n    showDeclined !== true && setShowDeclined(true);\n  };\n\n  const handleGenChange = (e) => {\n    const val = e.target.value;\n    setGenitive(val);\n    setStemFromGen(val);\n    showDeclined !== true && setShowDeclined(true);\n  };\n\n  const setStemFromGen = (genCase) => {\n    const newStem = findStem(genCase);\n    if (newStem !== undefined) {\n      setStem(newStem);\n    } else {\n      setStem(stemInput);\n    }\n  };\n\n  /* Given a latin word in genitive form, find the stem */\n  const findStem = (genForm) => {\n    const genEnding = declensions[currDeclension].genitive;\n    const regexSingular = new RegExp(`${genEnding.singular}$`, \"i\");\n    const regexPlural = new RegExp(`${genEnding.plural}$`, \"i\");\n\n    if (regexSingular.test(genForm)) {\n      return genForm.replace(regexSingular, \"\");\n    } else if (regexPlural.test(genForm)) {\n      return genForm.replace(regexPlural, \"\");\n    }\n  };\n\n  return (\n    <section className=\"decliner\">\n      <h3 className=\"heading\">Decliner</h3>\n      <form className=\"decliner-form\">\n        <fieldset className=\"decliner-group\">\n          <DeclinerInput\n            name=\"nominative\"\n            onChange={handleNomChange}\n          ></DeclinerInput>\n          <DeclinerInput\n            name=\"genitive\"\n            onChange={handleGenChange}\n          ></DeclinerInput>\n          <p className=\"or\">or</p>\n          <DeclinerInput\n            name=\"stem\"\n            onChange={handleStemChange}\n          ></DeclinerInput>\n        </fieldset>\n\n        <label\n          htmlFor=\"declension_select\"\n          className={`declension-select label`}\n        >\n          Declensions\n        </label>\n        <select\n          name=\"declension_select\"\n          className=\"declension-select decliner-field\"\n          onChange={handleDeclChange}\n        >\n          {declensionOptions.map((el, index) => (\n            <option value={el} key={index}>\n              {cleanUnderscoresToProper(el)}\n            </option>\n          ))}\n        </select>\n      </form>\n\n      {/* {showDeclined && ( */}\n      <DeclensionTable\n        declension={declensions[currDeclension]}\n        declensionName={currDeclension}\n        cases={declension_info.cases}\n        root={stem}\n        classes=\"decliner\"\n        nominative={nominative}\n        tentativeRoot={genitive}\n        isName={props.isName}\n      ></DeclensionTable>\n      {/* )} */}\n    </section>\n  );\n};\n\nexport default Decliner;\n","import React, { useState } from \"react\";\nimport \"../styles/App.css\";\nimport DeclensionTable from \"./DeclensionTable\";\nimport Decliner from \"./Decliner\";\nimport { declensions, declension_info } from \"../js/declensions\";\n\nconst App = () => {\n  const [isName, setIsName] = useState(false);\n  const [didScroll, setDidScroll] = useState(false);\n\n  const handleClick = () => {\n    setIsName(() => !isName);\n  };\n\n  const handleScroll = () => {\n    if (!didScroll) {\n      setDidScroll(() => !didScroll);\n    }\n  };\n\n  return (\n    <section id=\"home\">\n      <header className=\"header\">\n        <h2 className=\"heading\">Latin Declensions</h2>\n        <p>\n          The variation of a{\" \"}\n          <span className=\"keyword\">\n            noun\n            <span className=\"info\">\n              A person, place or thing.\n              <span className=\"example\">\n                Aislin, Gemma, New York, cat, audience\n              </span>\n            </span>\n          </span>\n          ,{\" \"}\n          <span className=\"keyword\">\n            pronoun\n            <span className=\"info\">\n              A word that is used instead of a noun or noun phrase\n              <span className=\"example\">\n                I, me, he, she, herself, you, it, that, they, each, few, many,\n                who, whoever, whose, someone, everybody and etc.\n              </span>\n            </span>\n          </span>\n          ,{\" \"}\n          <span className=\"keyword\">\n            adjective\n            <span className=\"info\">\n              A word or phrase that describes a noun\n              <span className=\"example\">\n                The <em>red</em> balloon. The <em>melodic</em> sounds. The grass\n                is <em>green</em> here.\n              </span>\n            </span>\n          </span>{\" \"}\n          or{\" \"}\n          <span className=\"keyword\">\n            article\n            <span className=\"info\">\n              Special modifiers that appear before nouns or noun phrases that\n              help clarify the meaning of them.\n              <span className=\"example\">the, a/an</span>\n            </span>\n          </span>{\" \"}\n          to indicate grammatical case, number and gender.\n        </p>\n      </header>\n\n      <div className=\"is-name-container\">\n        Declining Name\n        <div\n          className={`slider ${isName ? \"active\" : \"\"}`}\n          onClick={handleClick}\n        >\n          <div className=\"slider-dot\"></div>\n        </div>\n      </div>\n\n      <Decliner isName={isName}></Decliner>\n      <div className=\"ref-tables\" onScroll={handleScroll}>\n        <h3 className=\"heading\">Declension Tables</h3>\n        <div className=\"tables-container\">\n          {Object.entries(declensions).map(([key, value], index) => (\n            <DeclensionTable\n              declension={value}\n              declensionName={key}\n              key={index}\n              cases={declension_info.cases}\n              isName={isName}\n            ></DeclensionTable>\n          ))}\n        </div>\n        <div className={`scroll-prompt ${didScroll ? \"hide\" : \"\"}`}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2\"\n            className=\"arrow\"\n          >\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n            <polyline points=\"19 12 12 19 5 12\"></polyline>\n          </svg>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}